apiVersion: extensions.gardener.cloud/v1alpha1
kind: OperatingSystemConfig
metadata:
  name: cloud-config-<worker pool name>-original
  namespace: shoot--<>
spec:
  purpose: reconcile
  reloadConfigFilePath: /var/lib/cloud-config-downloader/downloads/cloud_config
  type: coreos
  # when using CRI with containerd
  criConfig:
    name: containerd
  providerConfig:
    <optional: osc provider config from Shoot.spec.provider.workers.machine.image.providerconfig>
  files:
    - ssl root certs under /etc/ssl/certs/
    - docker.conf as systemd-drop-in units under /etc/systemd/
    - journald.conf as systemd-drop-in units under /etc/systemd/
    - kubelet ca.crt under /var/lib/kubelet/
    - kubelet config under /var/lib/kubelet/config
        - also contains kubelet flags defined in Shoot (eviction, max pods, ...)
    - general host config under /etc/sysctl.d/99-k8s-general.conf (tcp settings, ...)
    - health monitor scripts for kubelet, docker, containerd
    - runs.sh script under /var/lib/gardener-user/run.sh that
      adds gardener-suer and adds ssh key
    - gardener-user-ssh.key under /var/lib for the gardener-user

    # when using CRI with containerd
    - bash script /opt/bin/init-containerd
      - generate default containerd config file via os-pre-installed containerd cmd tool
        "containerd"
      - generated config in /etc/containerd/config.toml
      - adding drop-in file '30-env_config.conf' for containerd.service to edit PATH Environment
        Variable adding dir (/var/bin/containerruntimes) where the container runtime binaries
        are located at
  units:
    # when using docker
    - docker-logrotate.service ExecStart=/usr/sbin/logrotate /etc/systemd/docker.conf
    - docker-logrotate.timer Log rotation every 10 mins
    - docker-monitor.service starting '/opt/bin/health-monitor' with parameter "docker"
      - after kubelet
    # when using CRI with containerd
    - containerd-logrotate.service /usr/sbin/logrotate /etc/systemd/containerd.conf
    - containerd-logrotate.timer Log rotation every 10 mins
    - containerd-monitor.service starting '/opt/bin/health-monitor' with parameter "containerd"
      - after kubelet
    - containerd-service with systemd dropin "exec-start-pre-init-config.conf"
      starting /opt/bin/init-containerd bash script
      - created in 'file' section

    - updatecacerts.service updating CA bundle at /etc/ssl/certs/ca-certificates.crt
    - kubelet-monitor.service starting '/opt/bin/health-monitor' with parameter "kubelet"
    - restart standart systemd-sysctl.service to intitially generate files in /etcd/sysctl.d/
    - gardener-user.service executing /var/lib/gardener-user/run.sh to
      add gardener-user and ssh key
    - custom-mtu.service to apply a custom MTU to eth0 with 'ip' command
    - kubelet.service
      - after docker.service or after containerd.service
      - Pre start executes 'docker run' to download hyperkube image -> cp to '/opt/bin/kubelet'
      - starting kubelet under /opt/bin/kubelet
        --bootstrap-kubeconfig=/var/lib/kubelet/kubeconfig-bootstrap \
        --config=/var/lib/kubelet/config/kubelet \
        --cni-bin-dir=/opt/cni/bin/ \
        --cni-conf-dir=/etc/cni/net.d/ \
        --pod-infra-container-image=<>/google_containers/<pause container> \
        --kubeconfig=/var/lib/kubelet/kubeconfig-real \
        --network-plugin=cni \
        --node-labels="node.kubernetes.io/role=node,
                      worker.gardener.cloud/pool=<Shoot worker pool name>" \
        --volume-plugin-dir=/var/lib/kubelet/volumeplugins \
        --v=2 \
        $KUBELET_EXTRA_ARGS \ # all extra kubelet flags defined in Shoot.yaml
        --cloud-provider=aws # added by webhook /controlplane from provider extension
        # when using containerd:
        --container-runtime=remote
        --container-runtime-endpoint=unix:///run/containerd/containerd.sock

status:
  cloudConfig:
    secretRef:
      # contains the user-data (coreos: cloud_config)
      name: osc-result-cloud-config-<workername>-original
      namespace: shoot--<>
  command:
/usr/bin/coreos-cloudinit --from-file=/var/lib/cloud-config-downloader/downloads/cloud_config
  lastOperation: <>
  # all units that need to be restarted when the downloader
  # script updates systemd service and files in the cloud_config (defined in spec)
  units:
    - updatecacerts.service
    - docker-logrotate.service
    - docker-logrotate.timer
    - docker-monitor.service
    - kubelet.service
    - kubelet-monitor.service
    - systemd-sysctl.service
    - gardener-user.service
    - custom-mtu.service
